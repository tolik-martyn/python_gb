import telebot
from config import TOKEN
import random


bot = telebot.TeleBot(TOKEN)


def compress(mess):

    text1 = mess.text
    count = 1
    text2 = ''

    for i in range(len(text1)-1):
        if text1[i] == text1[i+1]:
            if i != len(text1)-2:
                count += 1
            else:
                count += 1
                text2 += str(count) + text1[i]
                break
        
        else:
            if count == 1:
                text2 += text1[i]
            else:
                text2 += str(count) + text1[i]
            count = 1

            if i == len(text1)-2:
                text2 += text1[i+1]

    bot.send_message(mess.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {text2}')

def decompress(mess):

    text1 = mess.text
    text2 = ''
    count = 0
    i = 0

    while i < len(text1)-1:
        if text1[i].isdigit():
            count = int(text1[i])
            text2 += text1[i+1] * count
            i += 2

        else:
            text2 += text1[i]
            i += 1
            if i == len(text1)-1:
                text2 += text1[i]

    bot.send_message(mess.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {text2}')

def calculator(mess):
    bot.send_message(mess.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {str(eval(mess.text))}')

def zodiac_signs(mess):

    with open('zodiac.txt', 'r', encoding='utf-8') as file:
        text = file.read().splitlines()

    for i in text:
        if mess == i.split('*/')[0]:
            result = i.split('*/')[1]
            break
    
    return result

def guess(mess):
    text1 = mess.text
    rand = random.randint(1, 5)
    if text1 == str(rand):
        text2 = '–£—Ä–∞! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ üëç'
    else:
        text2 = f'–ê–∫–µ–ª–∞ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è ü§¶\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: {rand}'

    bot.send_message(mess.chat.id, text2)

def throw_kosti2(mess):

    kosti2 = ['ü¶¥', 'ü¶¥ü¶¥', 'ü¶¥ü¶¥ü¶¥', 'ü¶¥ü¶¥ü¶¥ü¶¥', 'ü¶¥ü¶¥ü¶¥ü¶¥ü¶¥', 'ü¶¥ü¶¥ü¶¥ü¶¥ü¶¥ü¶¥']

    if mess == '–û–¥–Ω—É':
        result = kosti2[(random.randint(0, 5))]
    elif mess == '–î–≤–µ':
        result = f'{kosti2[(random.randint(0, 5))]} ‚à£ {kosti2[(random.randint(0, 5))]}'
    return result

"""–ö–æ–º–∞–Ω–¥–∞ –°–¢–ê–†–¢"""

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)

    item1 = telebot.types.KeyboardButton('–ö–∞–∫ –¥–µ–ª–∞?')
    item2 = telebot.types.KeyboardButton('–ö–∏–Ω—É—Ç—å –∫–æ—Å—Ç—å')
    item3 = telebot.types.KeyboardButton('–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ')
    item4 = telebot.types.KeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
    item5 = telebot.types.KeyboardButton('–ö–æ–¥–∏—Ä–æ–≤–∫–∞')
    item6 = telebot.types.KeyboardButton('–î–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞')
    item7 = telebot.types.KeyboardButton('–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ (0-100)')
    item8 = telebot.types.KeyboardButton('–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞')

    markup.add(item1, item2, item3, item4, item5, item6, item7, item8)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text == '–ü—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç üòâ')

    elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
        markup = telebot.types.InlineKeyboardMarkup(row_width=2)
        item1 = telebot.types.InlineKeyboardButton('He –æ—á–µ–Ω—å', callback_data='He –æ—á–µ–Ω—å')
        item2 = telebot.types.InlineKeyboardButton('–°—É–ø–µ—Ä', callback_data='–°—É–ø–µ—Ä')
        markup.add(item1, item2)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, a y –≤–∞—Å?', reply_markup=markup)

    elif message.text == '–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ (0-100)':
        bot.send_message(message.chat.id, str(random.randint(0, 100)))

    elif message.text == '–ö–∏–Ω—É—Ç—å –∫–æ—Å—Ç—å':
        markup = telebot.types.InlineKeyboardMarkup(row_width=2)
        item1 = telebot.types.InlineKeyboardButton('–û–¥–Ω—É', callback_data='–û–¥–Ω—É')
        item2 = telebot.types.InlineKeyboardButton('–î–≤–µ', callback_data='–î–≤–µ')
        markup.add(item1, item2)
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –∫–æ—Å—Ç–µ–π –∫—É–Ω—É—Ç—å?', reply_markup=markup)

    elif message.text == '–ö–æ–¥–∏—Ä–æ–≤–∫–∞':
        text = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏')
        bot.register_next_step_handler(text, compress)

    elif message.text == '–î–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞':
        text = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∏')
        bot.register_next_step_handler(text, decompress)

    elif message.text == '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        text = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: (2+3)/((5-1)*1)')
        bot.register_next_step_handler(text, calculator)

    elif message.text == '–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞':
        markup = telebot.types.InlineKeyboardMarkup(row_width=2)
        item1 = telebot.types.InlineKeyboardButton('–û–≤–µ–Ω', callback_data='–û–≤–µ–Ω')
        item2 = telebot.types.InlineKeyboardButton('–¢–µ–ª–µ—Ü', callback_data='–¢–µ–ª–µ—Ü')
        item3 = telebot.types.InlineKeyboardButton('–ë–ª–∏–∑–Ω–µ—Ü—ã', callback_data='–ë–ª–∏–∑–Ω–µ—Ü—ã')
        item4 = telebot.types.InlineKeyboardButton('–†–∞–∫', callback_data='–†–∞–∫')
        item5 = telebot.types.InlineKeyboardButton('–õ–µ–≤', callback_data='–õ–µ–≤')
        item6 = telebot.types.InlineKeyboardButton('–î–µ–≤–∞', callback_data='–î–µ–≤–∞')
        item7 = telebot.types.InlineKeyboardButton('–í–µ—Å—ã', callback_data='–í–µ—Å—ã')
        item8 = telebot.types.InlineKeyboardButton('–°–∫–æ—Ä–ø–∏–æ–Ω', callback_data='–°–∫–æ—Ä–ø–∏–æ–Ω')
        item9 = telebot.types.InlineKeyboardButton('–°—Ç—Ä–µ–ª–µ—Ü', callback_data='–°—Ç—Ä–µ–ª–µ—Ü')
        item10 = telebot.types.InlineKeyboardButton('–ö–æ–∑–µ—Ä–æ–≥', callback_data='–ö–æ–∑–µ—Ä–æ–≥')
        item11 = telebot.types.InlineKeyboardButton('–í–æ–¥–æ–ª–µ–π', callback_data='–í–æ–¥–æ–ª–µ–π')
        item12 = telebot.types.InlineKeyboardButton('–†—ã–±—ã', callback_data='–†—ã–±—ã')
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞', reply_markup=markup)

    elif message.text == '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ':
        text = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5')
        bot.register_next_step_handler(text, guess)

    else:
        bot.send_message(message.chat.id, '–≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚òù')
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEHAQZjqK3EnNHMTLYG16keCV6k93qfWAACEgADwDZPEzO8ngEulQc3LAQ')
        

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == 'He –æ—á–µ–Ω—å':
        bot.send_message(call.message.chat.id, '–î–µ—Ä–∂–∏—Å—å, –≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è üí™')
    elif call.data == '–°—É–ø–µ—Ä':
        bot.send_message(call.message.chat.id, '–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, –æ—Ç–ª–∏—á–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π üòé')
    elif call.data == '–û–≤–µ–Ω':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–¢–µ–ª–µ—Ü':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–ë–ª–∏–∑–Ω–µ—Ü—ã':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–†–∞–∫':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–õ–µ–≤':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–î–µ–≤–∞':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–í–µ—Å—ã':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–°–∫–æ—Ä–ø–∏–æ–Ω':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–°—Ç—Ä–µ–ª–µ—Ü':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–ö–æ–∑–µ—Ä–æ–≥':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–í–æ–¥–æ–ª–µ–π':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–†—ã–±—ã':
        bot.send_message(call.message.chat.id, f'{call.data}:\n{zodiac_signs(call.data)}')
    elif call.data == '–û–¥–Ω—É':
        bot.send_message(call.message.chat.id, f'{throw_kosti2(call.data)}')
    elif call.data == '–î–≤–µ':
        bot.send_message(call.message.chat.id, f'{throw_kosti2(call.data)}')


bot.polling(none_stop=True)
